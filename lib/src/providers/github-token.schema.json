{
  "$schema": "http://json-schema.org/draft-07/schema",
  "title": "Authorization",
  "description": "The authorization for an OAuth app, GitHub App, or a Personal Access Token.",
  "type": "object",
  "properties": {
    "id": {
      "type": "integer"
    },
    "url": {
      "type": "string",
      "format": "uri"
    },
    "scopes": {
      "description": "A list of scopes that this authorization is in.",
      "type": ["array", "null"],
      "items": {
        "type": "string"
      }
    },
    "token": {
      "type": "string"
    },
    "token_last_eight": {
      "type": ["string", "null"]
    },
    "hashed_token": {
      "type": ["string", "null"]
    },
    "app": {
      "type": "object",
      "properties": {
        "client_id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "url": {
          "type": "string",
          "format": "uri"
        }
      },
      "required": ["client_id", "name", "url"]
    },
    "note": {
      "type": ["string", "null"]
    },
    "note_url": {
      "type": ["string", "null"],
      "format": "uri"
    },
    "updated_at": {
      "type": "string",
      "format": "date-time"
    },
    "created_at": {
      "type": "string",
      "format": "date-time"
    },
    "fingerprint": {
      "type": ["string", "null"]
    },
    "user": {
      "anyOf": [
        {
          "type": "null"
        },
        {
          "title": "Simple User",
          "description": "A GitHub user.",
          "type": "object",
          "properties": {
            "name": {
              "type": ["string", "null"]
            },
            "email": {
              "type": ["string", "null"]
            },
            "login": {
              "type": "string",
              "examples": ["octocat"]
            },
            "id": {
              "type": "integer",
              "examples": [1]
            },
            "node_id": {
              "type": "string",
              "examples": ["MDQ6VXNlcjE="]
            },
            "avatar_url": {
              "type": "string",
              "format": "uri",
              "examples": ["https://github.com/images/error/octocat_happy.gif"]
            },
            "gravatar_id": {
              "type": ["string", "null"],
              "examples": ["41d064eb2195891e12d0413f63227ea7"]
            },
            "url": {
              "type": "string",
              "format": "uri",
              "examples": ["https://api.github.com/users/octocat"]
            },
            "html_url": {
              "type": "string",
              "format": "uri",
              "examples": ["https://github.com/octocat"]
            },
            "followers_url": {
              "type": "string",
              "format": "uri",
              "examples": ["https://api.github.com/users/octocat/followers"]
            },
            "following_url": {
              "type": "string",
              "examples": [
                "https://api.github.com/users/octocat/following{/other_user}"
              ]
            },
            "gists_url": {
              "type": "string",
              "examples": [
                "https://api.github.com/users/octocat/gists{/gist_id}"
              ]
            },
            "starred_url": {
              "type": "string",
              "examples": [
                "https://api.github.com/users/octocat/starred{/owner}{/repo}"
              ]
            },
            "subscriptions_url": {
              "type": "string",
              "format": "uri",
              "examples": ["https://api.github.com/users/octocat/subscriptions"]
            },
            "organizations_url": {
              "type": "string",
              "format": "uri",
              "examples": ["https://api.github.com/users/octocat/orgs"]
            },
            "repos_url": {
              "type": "string",
              "format": "uri",
              "examples": ["https://api.github.com/users/octocat/repos"]
            },
            "events_url": {
              "type": "string",
              "examples": [
                "https://api.github.com/users/octocat/events{/privacy}"
              ]
            },
            "received_events_url": {
              "type": "string",
              "format": "uri",
              "examples": [
                "https://api.github.com/users/octocat/received_events"
              ]
            },
            "type": {
              "type": "string",
              "examples": ["User"]
            },
            "site_admin": {
              "type": "boolean"
            },
            "starred_at": {
              "type": "string",
              "examples": ["\"2020-07-09T00:17:55Z\""]
            }
          },
          "required": [
            "avatar_url",
            "events_url",
            "followers_url",
            "following_url",
            "gists_url",
            "gravatar_id",
            "html_url",
            "id",
            "node_id",
            "login",
            "organizations_url",
            "received_events_url",
            "repos_url",
            "site_admin",
            "starred_url",
            "subscriptions_url",
            "type",
            "url"
          ]
        }
      ]
    },
    "installation": {
      "anyOf": [
        {
          "type": "null"
        },
        {
          "title": "Scoped Installation",
          "type": "object",
          "properties": {
            "permissions": {
              "title": "App Permissions",
              "type": "object",
              "description": "The permissions granted to the user-to-server access token.",
              "properties": {
                "actions": {
                  "type": "string",
                  "description": "The level of permission to grant the access token for GitHub Actions workflows, workflow runs, and artifacts.",
                  "enum": ["read", "write"]
                },
                "administration": {
                  "type": "string",
                  "description": "The level of permission to grant the access token for repository creation, deletion, settings, teams, and collaborators creation.",
                  "enum": ["read", "write"]
                },
                "checks": {
                  "type": "string",
                  "description": "The level of permission to grant the access token for checks on code.",
                  "enum": ["read", "write"]
                },
                "contents": {
                  "type": "string",
                  "description": "The level of permission to grant the access token for repository contents, commits, branches, downloads, releases, and merges.",
                  "enum": ["read", "write"]
                },
                "deployments": {
                  "type": "string",
                  "description": "The level of permission to grant the access token for deployments and deployment statuses.",
                  "enum": ["read", "write"]
                },
                "environments": {
                  "type": "string",
                  "description": "The level of permission to grant the access token for managing repository environments.",
                  "enum": ["read", "write"]
                },
                "issues": {
                  "type": "string",
                  "description": "The level of permission to grant the access token for issues and related comments, assignees, labels, and milestones.",
                  "enum": ["read", "write"]
                },
                "metadata": {
                  "type": "string",
                  "description": "The level of permission to grant the access token to search repositories, list collaborators, and access repository metadata.",
                  "enum": ["read", "write"]
                },
                "packages": {
                  "type": "string",
                  "description": "The level of permission to grant the access token for packages published to GitHub Packages.",
                  "enum": ["read", "write"]
                },
                "pages": {
                  "type": "string",
                  "description": "The level of permission to grant the access token to retrieve Pages statuses, configuration, and builds, as well as create new builds.",
                  "enum": ["read", "write"]
                },
                "pull_requests": {
                  "type": "string",
                  "description": "The level of permission to grant the access token for pull requests and related comments, assignees, labels, milestones, and merges.",
                  "enum": ["read", "write"]
                },
                "repository_announcement_banners": {
                  "type": "string",
                  "description": "The level of permission to grant the access token to view and manage announcement banners for a repository.",
                  "enum": ["read", "write"]
                },
                "repository_hooks": {
                  "type": "string",
                  "description": "The level of permission to grant the access token to manage the post-receive hooks for a repository.",
                  "enum": ["read", "write"]
                },
                "repository_projects": {
                  "type": "string",
                  "description": "The level of permission to grant the access token to manage repository projects, columns, and cards.",
                  "enum": ["read", "write", "admin"]
                },
                "secret_scanning_alerts": {
                  "type": "string",
                  "description": "The level of permission to grant the access token to view and manage secret scanning alerts.",
                  "enum": ["read", "write"]
                },
                "secrets": {
                  "type": "string",
                  "description": "The level of permission to grant the access token to manage repository secrets.",
                  "enum": ["read", "write"]
                },
                "security_events": {
                  "type": "string",
                  "description": "The level of permission to grant the access token to view and manage security events like code scanning alerts.",
                  "enum": ["read", "write"]
                },
                "single_file": {
                  "type": "string",
                  "description": "The level of permission to grant the access token to manage just a single file.",
                  "enum": ["read", "write"]
                },
                "statuses": {
                  "type": "string",
                  "description": "The level of permission to grant the access token for commit statuses.",
                  "enum": ["read", "write"]
                },
                "vulnerability_alerts": {
                  "type": "string",
                  "description": "The level of permission to grant the access token to manage Dependabot alerts.",
                  "enum": ["read", "write"]
                },
                "workflows": {
                  "type": "string",
                  "description": "The level of permission to grant the access token to update GitHub Actions workflow files.",
                  "enum": ["write"]
                },
                "members": {
                  "type": "string",
                  "description": "The level of permission to grant the access token for organization teams and members.",
                  "enum": ["read", "write"]
                },
                "organization_administration": {
                  "type": "string",
                  "description": "The level of permission to grant the access token to manage access to an organization.",
                  "enum": ["read", "write"]
                },
                "organization_custom_roles": {
                  "type": "string",
                  "description": "The level of permission to grant the access token for custom repository roles management. This property is in beta and is subject to change.",
                  "enum": ["read", "write"]
                },
                "organization_announcement_banners": {
                  "type": "string",
                  "description": "The level of permission to grant the access token to view and manage announcement banners for an organization.",
                  "enum": ["read", "write"]
                },
                "organization_hooks": {
                  "type": "string",
                  "description": "The level of permission to grant the access token to manage the post-receive hooks for an organization.",
                  "enum": ["read", "write"]
                },
                "organization_plan": {
                  "type": "string",
                  "description": "The level of permission to grant the access token for viewing an organization's plan.",
                  "enum": ["read"]
                },
                "organization_projects": {
                  "type": "string",
                  "description": "The level of permission to grant the access token to manage organization projects and projects beta (where available).",
                  "enum": ["read", "write", "admin"]
                },
                "organization_packages": {
                  "type": "string",
                  "description": "The level of permission to grant the access token for organization packages published to GitHub Packages.",
                  "enum": ["read", "write"]
                },
                "organization_secrets": {
                  "type": "string",
                  "description": "The level of permission to grant the access token to manage organization secrets.",
                  "enum": ["read", "write"]
                },
                "organization_self_hosted_runners": {
                  "type": "string",
                  "description": "The level of permission to grant the access token to view and manage GitHub Actions self-hosted runners available to an organization.",
                  "enum": ["read", "write"]
                },
                "organization_user_blocking": {
                  "type": "string",
                  "description": "The level of permission to grant the access token to view and manage users blocked by the organization.",
                  "enum": ["read", "write"]
                },
                "team_discussions": {
                  "type": "string",
                  "description": "The level of permission to grant the access token to manage team discussions and related comments.",
                  "enum": ["read", "write"]
                }
              },
              "example": {
                "contents": "read",
                "issues": "read",
                "deployments": "write",
                "single_file": "read"
              }
            },
            "repository_selection": {
              "description": "Describe whether all repositories have been selected or there's a selection involved",
              "type": "string",
              "enum": ["all", "selected"]
            },
            "single_file_name": {
              "type": ["string", "null"],
              "examples": ["config.yaml"]
            },
            "has_multiple_single_files": {
              "type": "boolean",
              "examples": [true]
            },
            "single_file_paths": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "examples": ["config.yml", ".github/issue_TEMPLATE.md"]
            },
            "repositories_url": {
              "type": "string",
              "format": "uri",
              "examples": ["https://api.github.com/users/octocat/repos"]
            },
            "account": {
              "title": "Simple User",
              "description": "A GitHub user.",
              "type": "object",
              "properties": {
                "name": {
                  "type": ["string", "null"]
                },
                "email": {
                  "type": ["string", "null"]
                },
                "login": {
                  "type": "string",
                  "examples": ["octocat"]
                },
                "id": {
                  "type": "integer",
                  "examples": [1]
                },
                "node_id": {
                  "type": "string",
                  "examples": ["MDQ6VXNlcjE="]
                },
                "avatar_url": {
                  "type": "string",
                  "format": "uri",
                  "examples": [
                    "https://github.com/images/error/octocat_happy.gif"
                  ]
                },
                "gravatar_id": {
                  "type": ["string", "null"],
                  "examples": ["41d064eb2195891e12d0413f63227ea7"]
                },
                "url": {
                  "type": "string",
                  "format": "uri",
                  "examples": ["https://api.github.com/users/octocat"]
                },
                "html_url": {
                  "type": "string",
                  "format": "uri",
                  "examples": ["https://github.com/octocat"]
                },
                "followers_url": {
                  "type": "string",
                  "format": "uri",
                  "examples": ["https://api.github.com/users/octocat/followers"]
                },
                "following_url": {
                  "type": "string",
                  "examples": [
                    "https://api.github.com/users/octocat/following{/other_user}"
                  ]
                },
                "gists_url": {
                  "type": "string",
                  "examples": [
                    "https://api.github.com/users/octocat/gists{/gist_id}"
                  ]
                },
                "starred_url": {
                  "type": "string",
                  "examples": [
                    "https://api.github.com/users/octocat/starred{/owner}{/repo}"
                  ]
                },
                "subscriptions_url": {
                  "type": "string",
                  "format": "uri",
                  "examples": [
                    "https://api.github.com/users/octocat/subscriptions"
                  ]
                },
                "organizations_url": {
                  "type": "string",
                  "format": "uri",
                  "examples": ["https://api.github.com/users/octocat/orgs"]
                },
                "repos_url": {
                  "type": "string",
                  "format": "uri",
                  "examples": ["https://api.github.com/users/octocat/repos"]
                },
                "events_url": {
                  "type": "string",
                  "examples": [
                    "https://api.github.com/users/octocat/events{/privacy}"
                  ]
                },
                "received_events_url": {
                  "type": "string",
                  "format": "uri",
                  "examples": [
                    "https://api.github.com/users/octocat/received_events"
                  ]
                },
                "type": {
                  "type": "string",
                  "examples": ["User"]
                },
                "site_admin": {
                  "type": "boolean"
                },
                "starred_at": {
                  "type": "string",
                  "examples": ["\"2020-07-09T00:17:55Z\""]
                }
              },
              "required": [
                "avatar_url",
                "events_url",
                "followers_url",
                "following_url",
                "gists_url",
                "gravatar_id",
                "html_url",
                "id",
                "node_id",
                "login",
                "organizations_url",
                "received_events_url",
                "repos_url",
                "site_admin",
                "starred_url",
                "subscriptions_url",
                "type",
                "url"
              ]
            }
          },
          "required": [
            "permissions",
            "repository_selection",
            "single_file_name",
            "repositories_url",
            "account"
          ]
        }
      ]
    },
    "expires_at": {
      "type": ["string", "null"],
      "format": "date-time"
    }
  },
  "required": [
    "app",
    "id",
    "note",
    "note_url",
    "scopes",
    "token",
    "hashed_token",
    "token_last_eight",
    "fingerprint",
    "url",
    "created_at",
    "updated_at",
    "expires_at"
  ]
}
